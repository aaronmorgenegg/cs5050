I ran multiple tests using both algorithms, the results of which are shown in the provided graphs(Each graph is named based on its input parameters). For each test, I ran 10 repetitions, and used different values of k1, k2, n, m, etc.. The results were mostly random. From what I can tell, modifying the value of m had the greatest impact - larger values of m ran faster. However, the algorithm's runtime is so dependant on the input data that drawing such conclusions is unreliable at best. Due to the random nature of the object sizes, one run of the algorithm could finish in a fraction of a second, while another could take hours. 
